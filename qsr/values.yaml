# Default values for qsr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1


storageclass:
  name: nfs-client

proxy:
  name: intel-proxy
  configs:
    FTP_PROXY: http://proxy-png.intel.com:911
    HTTP_PROXY: http://proxy-png.intel.com:911
    HTTPS_PROXY: http://proxy-png.intel.com:912
    NO_PROXY: 10.0.0.0/8,192.168.0.0/16,localhost,.local,127.0.0.0/8,172.16.0.0/12,134.134.0.0/16,172.17.0.2/16
    SOCKS_PROXY: http://proxy-png.intel.com:1080
    ftp_proxy: http://proxy-png.intel.com:911
    http_proxy: http://proxy-png.intel.com:911
    https_proxy: http://proxy-png.intel.com:912
    no_proxy: 10.0.0.0/8,192.168.0.0/16,localhost,.local,127.0.0.0/8,172.16.0.0/12,134.134.0.0/16,172.17.0.2/16
    socks_proxy: http://proxy-png.intel.com:1080

qsr_config:
  name: qsr-config
  configs:
    API_URL: 'http://10.226.76.247:30050'
    MQTT_HOST: '10.226.76.247'
    MQTT_URL: 'ws://10.226.76.247:30091'
    MQTT_PORT: "31883"
    WS_PORT: "30091"
    MYSQL_HOST: "mysql.qsr.svc.cluster.local"
    MYSQL_PASSWORD: "test1234"
    MYSQL_PORT: "3306"
    MYSQL_USER: root

asr_config:
  name: asr-config
  configs:
    audio_ingestion_host: "audio-ingestion.qsr.svc.cluster.local:50054"
    asr_host: "asr.qsr.svc.cluster.local:50051"
    plugin_type: "MQTT"
    plugin_host: "10.226.76.247"
    plugin_port: "31883"


image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
